@using SchoolJournal.ViewModels
@model JournalGridPageViewModel

@{
    string result = "Вы не авторизованы";
    if (User.Identity.IsAuthenticated)
    {
        result = "Ваш логин: " + User.Identity.Name;
    }

    string role = "Нет роли";
    if (User.IsInRole("admin"))
    {
        role = ", вы админ!";
    }
    else
    {
        role = ", вы пользователь!";
    }

}
<table class="table journal-table table-dark">
    <tr>
        <th></th>

        <th colspan="@(Model.Columns.Count)">Дата</th>

        @if (User.Identity.IsAuthenticated)
        {
            if (User.IsInRole("Admin"))
            {
                <th colspan="@(Model.Columns.Count)"  class="new-column-control-container">
                    <i onclick="createColumn()" class="fa fa-plus create-column"></i>
                    <i onclick="addStudent()" class="fa fa-user-circle add-student"></i>
                    <i onclick="cancelColumn()" class="fa fa-times cancel-column-creation"></i>
                    <i onclick="confirmColumnCreation()" class="fa fa-check confirm-column-creation"></i>
                </th>
            }
        }
    </tr>
    <tr>
        <th>Студент</th>
        @foreach (JournalGridColumnViewModel column in Model.Columns)
        {
            <td>@column.Date.ToString(string.Format("dd/MM/yyyy"))</td>

        }

        <td class="new-column-date">
            <input type="date" class="new-date" id="datetime" onKeyPress="cislo()" />
        </td>

    </tr>
    @foreach (var student in Model.Students)
    {
    <tr>
        <td>
            <a id="@student.Id" class="details" href="http://localhost:19230/School/student/@student.Id">@student.FullName</a>
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("Admin"))
                {
                    <i onclick="deleteChosenStudent(@student.Id)" class="fa fa-trash-o delete-chosen-student"></i>
                }
            }
            </td>
            @foreach (JournalGridColumnViewModel column in Model.Columns)
            {
                int? markValue = column.Marks.FirstOrDefault(x => x.StudentId == student.Id)?.Value;
                <td>
                    @markValue
                </td>
            }

            <td class="new-column-cell">
                <input type="text" class="new-column-input" id="mark-@student.Id" studentid="@student.Id" />
            </td>
        </tr>
    }
        <tr>
            <td class="add-student-cell">
                <i onclick="confirmStudentCreation()" class="fa fa-check confirm-student-creation"></i>
                <input type="text" class="new-student-firstname" />
                <input type="text" class="new-student-lastname" />
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("Admin"))
                {
                    @*<th colspan="@(Model.Columns.Count)"></th>*@
                    <th class="new-column-control">
                        <i onclick="deleteAllColumnsAndDates()" class="fa fa-trash-o delete-all-columns-and-dates"></i>
                    </th>
                }
            }

            <td>@result @role</td>
            <td colspan="@(Model.Columns.Count)"><a href="/Account/Logout">Выход</a></td>
        </tr>
</table>

@Scripts.Render("~/bundles/JournalPageScript")
